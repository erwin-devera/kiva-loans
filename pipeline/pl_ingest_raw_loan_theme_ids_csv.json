{
	"name": "pl_ingest_raw_loan_theme_ids_csv",
	"properties": {
		"activities": [
			{
				"name": "Validate Config File Exists",
				"type": "Validation",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_config_fileslist_json",
						"type": "DatasetReference"
					},
					"timeout": "0.12:00:00",
					"sleep": 10
				}
			},
			{
				"name": "Verify Files Count",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Validate Config File Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_raw_files_count",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If Record Count Matches",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Verify Files Count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(length(activity('Verify Files Count').output.childItems), 4)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Failed expected file count",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Failed expected file count",
								"errorCode": "-1"
							}
						}
					]
				}
			},
			{
				"name": "Config file does not exist",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Validate Config File Exists",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Cannot find the config file",
					"errorCode": "-1"
				}
			},
			{
				"name": "Get List of Files To Copy",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If Record Count Matches",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_config_fileslist_json",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy Each File",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get List of Files To Copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get List of Files To Copy').output.value[0].files",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy Each Raw Kiva Loan CSV Files",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dw_raw_csv",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_raw_csv_bronze_dl",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"annotations": []
	}
}